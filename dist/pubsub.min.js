/**
 * PubSub
 * Javascript implementation of the Publish/Subscribe pattern.
 *
 * @version 3.2.6
 * @author George Raptis <georapbox@gmail.com> (georapbox.github.io)
 * @homepage https://github.com/georapbox/PubSub#readme
 * @repository https://github.com/georapbox/PubSub.git
 * @license MIT
 */

!function(t,n,r){"use strict";"function"==typeof define&&define.amd?define(r):"undefined"!=typeof module&&module.exports?module.exports=r():n.PubSub=r()}(0,this,function(){"use strict";function t(){var n,r,o;for(n=1,r=arguments.length;n<r;n++)for(o in arguments[n])Object.prototype.hasOwnProperty.call(arguments[n],o)&&(arguments[n][o]&&arguments[n][o].constructor&&arguments[n][o].constructor===Object?(arguments[0][o]=arguments[0][o]||{},t(arguments[0][o],arguments[n][o])):arguments[0][o]=arguments[n][o]);return arguments[0]}function n(t,n,r){var o;for(o in t)if(Object.prototype.hasOwnProperty.call(t,o)&&n&&!1===n.call(r,t[o],o,t))return;return t}function r(t){return function(){return this[t].apply(this,arguments)}}function o(t,n,r){for(var o,u,e=t._pubsub_topics[n],i=0,s=e?e.length:0;i<s;i+=1)u=e[i].token,(o=e[i]).callback(r,{name:n,token:u}),!0===o.once&&t.unsubscribe(u)}function u(t,n,r,u){return!!t._pubsub_topics[n]&&(u?o(t,n,r):setTimeout(function(){o(t,n,r)},0),!0)}function e(){return this instanceof e?(this._pubsub_topics={},this._pubsub_uid=-1,this):new e}return e.prototype.subscribe=function(t,n,r){var o=this._pubsub_topics,u=this._pubsub_uid+=1,e={};if("function"!=typeof n)throw new TypeError("When subscribing for an event, a callback function must be defined.");return o[t]||(o[t]=[]),e.token=u,e.callback=n,e.once=!!r,o[t].push(e),u},e.prototype.subscribeOnce=function(t,n){return this.subscribe(t,n,!0)},e.prototype.publish=function(t,n){return u(this,t,n,!1)},e.prototype.publishSync=function(t,n){return u(this,t,n,!0)},e.prototype.unsubscribe=function(t){var n,r,o=this._pubsub_topics,u=!1;for(n in o)if(Object.prototype.hasOwnProperty.call(o,n)&&o[n]){for(r=o[n].length;r;){if(r-=1,o[n][r].token===t)return o[n].splice(r,1),t;n===t&&(o[n].splice(r,1),u=!0)}if(!0===u)return t}return!1},e.prototype.unsubscribeAll=function(){return n(this._pubsub_topics,function(t,n,r){r[n]=[]}),this},e.prototype.hasSubscribers=function(t){var r=this._pubsub_topics,o=!1;return null==t?(n(r,function(t){if(t.length>0)return o=!0,!1}),o):!!(Object.prototype.hasOwnProperty.call(r,t)&&r[t].length>0)},e.prototype.subscribers=function(){return t({},this._pubsub_topics)},e.prototype.subscribersByTopic=function(t){return this._pubsub_topics[t]?this._pubsub_topics[t].slice(0):[]},e.prototype.alias=function(t){return n(t,function(n,o){e.prototype[o]&&(e.prototype[t[o]]=r(o))}),this},e});
//# sourceMappingURL=pubsub.min.js.map